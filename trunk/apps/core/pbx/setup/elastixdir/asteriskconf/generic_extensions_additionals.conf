;--------------------------------------------------------------------------------;
; Do NOT edit this file as it is auto-generated by FreePBX. All modifications to ;
; this file must be done via the web gui. There are alternative files to make    ;
; custom modifications, details at: http://freepbx.org/configuration_files       ;
;--------------------------------------------------------------------------------;
;

[{CODE}-app-calltrace]
include => {CODE}-app-calltrace-custom
exten => *69,1,Goto({CODE}-app-calltrace-perform,s,1)
; end of [{CODE}-app-calltrace]

[{CODE}-app-calltrace-perform]
include => {CODE}-app-calltrace-perform-custom
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Macro({CODE}-user-callerid,)
exten => s,n,Playback(info-about-last-call&telephone-number)
exten => s,n,Set(lastcaller=${DB(CALLTRACE/{CODE}/${EXTUSER})})
exten => s,n,GotoIf($[ $[ "${lastcaller}" = "" ] | $[ "${lastcaller}" = "unknown" ] ]?noinfo)
exten => s,n,SayDigits(${lastcaller})
exten => s,n,Set(TIMEOUT(digit)=3)
exten => s,n,Set(TIMEOUT(response)=7)
exten => s,n,Background(to-call-this-number&press-1)
exten => s,n,Goto(fin)
exten => s,n(noinfo),Playback(from-unknown-caller)
exten => s,n,Macro({CODE}-hangupcall,)
exten => s,n(fin),Noop(Waiting for input)
exten => s,n,WaitExten(60,)
exten => s,n,Playback(sorry-youre-having-problems&goodbye)
exten => 1,1,Goto({CODE}-from-internal,${lastcaller},1)
exten => i,1,Playback(vm-goodbye)
exten => i,n,Macro({CODE}-hangupcall,)
exten => t,1,Playback(vm-goodbye)
exten => t,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-calltrace-perform]


[{CODE}-app-directory]
include => {CODE}-app-directory-custom
exten => #,1,Answer
exten => #,n,Wait(1)
exten => #,n,AGI(directory,${DIR-CONTEXT},{CODE}-from-did-direct,${{CODE}_DIRECTORY:0:1}${{CODE}_DIRECTORY_OPTS})
exten => #,n,Playback(vm-goodbye)
exten => #,n,Hangup
exten => o,1,Playback(privacy-incorrect)

; end of [{CODE}-app-directory]


[{CODE}_app-echo-test]
include => app-echo-test-custom
exten => *43,1,Answer
exten => *43,n,Wait(1)
exten => *43,n,Playback(demo-echotest)
exten => *43,n,Echo()
exten => *43,n,Playback(demo-echodone)
exten => *43,n,Hangup

; end of [{CODE}-app-echo-test]


[{CODE}-app-speakextennum]
include => {CODE}-app-speakextennum-custom
exten => *65,1,Answer
exten => *65,n,Wait(1)
exten => *65,n,Macro({CODE}-user-callerid,)
exten => *65,n,Playback(your)
exten => *65,n,Playback(extension)
exten => *65,n,Playback(number)
exten => *65,n,Playback(is)
exten => *65,n,SayDigits(${EXTUSER})
exten => *65,n,Wait(2)
exten => *65,n,Hangup

; end of [{CODE}-app-speakextennum]


[{CODE}-app-speakingclock]
include => {CODE}-app-speakingclock-custom
exten => *60,1,Answer
exten => *60,n,Wait(1)
exten => *60,n,Set(NumLoops=0)
exten => *60,n(start),Set(FutureTime=$[${EPOCH} + 11])
exten => *60,n,Playback(at-tone-time-exactly)
exten => *60,n,GotoIf($["${{CODE}_TIMEFORMAT}" = "kM"]?hr24format)
exten => *60,n,SayUnixTime(${FutureTime},,IM 'and' S 'seconds' p)
exten => *60,n,Goto(waitloop)
exten => *60,n(hr24format),SayUnixTime(${FutureTime},,kM 'and' S 'seconds')
exten => *60,n(waitloop),Set(TimeLeft=$[${FutureTime} - ${EPOCH}])
exten => *60,n,GotoIf($[${TimeLeft} < 1]?playbeep)
exten => *60,n,Wait(1)
exten => *60,n,Goto(waitloop)
exten => *60,n(playbeep),Playback(beep)
exten => *60,n,Wait(5)
exten => *60,n,Set(NumLoops=$[${NumLoops} + 1])
exten => *60,n,GotoIf($[${NumLoops} < 5]?start)
exten => *60,n,Playback(goodbye)
exten => *60,n,Hangup

; end of [{CODE}-app-speakingclock]


[{CODE}-app-fmf-toggle]
include => {CODE}-app-fmf-toggle-custom
exten => *21,1,Goto({CODE}-app-fmf-toggle,s,start)
exten => s,1(start),Answer
exten => s,n,Wait(1)
exten => s,n,Macro({CODE}-user-callerid,)
exten => s,n,GotoIf($["${DB(EXTUSER/{CODE}/${EXTUSER}/followme/ddial)}" = "EXTENSION"]?activate)
exten => s,n,GotoIf($["${DB(EXTUSER/{CODE}/${EXTUSER}/followme/ddial)}" = "DIRECT"]?deactivate:end)
exten => s,n(deactivate),Set(DB(EXTUSER/{CODE}/${EXTUSER}/followme/ddial)=EXTENSION)
exten => s,n(hook_off),Playback(followme&de-activated)
exten => s,n(end),Macro({CODE}-hangupcall,)
exten => s,n(activate),Set(DB(EXTUSER/{CODE}/${EXTUSER}/followme/ddial)=DIRECT)
exten => s,n(hook_on),Playback(followme&activated)
exten => s,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-fmf-toggle]


[{CODE}-app-dictate-record]
include => {CODE}-app-dictate-record-custom
exten => *34,1,Answer
exten => *34,n,Macro({CODE}-user-callerid,)
exten => *34,n,Noop(CallerID is ${EXTUSER})
exten => *34,n,Set(DICTENABLED=${DB(EXTUSER/{CODE}/${EXTUSER}/dictate/enabled)})
exten => *34,n,GotoIf($[$["x${DICTENABLED}"="x"]|$["x${DICTENABLED}"="xdisabled"]]?nodict:dictok)
exten => *34,n(nodict),Playback(feature-not-avail-line)
exten => *34,n,Hangup
exten => *34,n(dictok),Dictate(/var/lib/asterisk/sounds/dictate/{dominio}/${EXTUSER})
exten => *34,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-dictate-record]


[{CODE}-app-dictate-send]
include => {CODE}-app-dictate-send-custom
exten => *35,1,Answer
exten => *35,n,Macro({CODE}-user-callerid,)
exten => *35,n,Noop(CallerID is ${EXTUSER})
exten => *35,n,Set(DICTENABLED=${DB(EXTUSER/{CODE}/${EXTUSER}/dictate/enabled)})
exten => *35,n,GotoIf($[$["x${DICTENABLED}"="x"]|$["x${DICTENABLED}"="xdisabled"]]?nodict:dictok)
exten => *35,n(nodict),Playback(feature-not-avail-line)
exten => *35,n,Hangup
exten => *35,n(dictok),Read(DICTFILE,enter-filename-short,,,,)
exten => *35,n,Set(DICTEMAIL=${DB(EXTUSER/{CODE}/${EXTUSER}/dictate/email)})
exten => *35,n,Set(DICTFMT=${EXTUSER/{CODE}/${EXTUSER}/dictate/format)})
exten => *35,n,Set(NAME=${DB(EXTUSER/{CODE}/${EXTUSER}/cidname)})
exten => *35,n,Playback(dictation-being-processed)
exten => *35,n,System(/var/lib/asterisk/bin/audio-email.pl --file /var/lib/asterisk/sounds/dictate/{dominio}/${EXTUSER}/${DICTFILE}.raw --attachment dict-${DICTFILE} --format ${DICTFMT} --to ${DICTEMAIL} --subject "Dictation from ${NAME} Attached")
exten => *35,n,Playback(dictation-sent)
exten => *35,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-dictate-send]


[{CODE}-app-gabcast]
include => {CODE}-app-gabcast-custom
exten => *422,1,Macro({CODE}-user-callerid,)
exten => *422,n,Goto({CODE}-gabcast,${EXTUSER},1)

; end of [{CODE}-app-gabcast]


[{CODE}-gabcast]
include => {CODE}-gabcast-custom
exten => _X.,1,Dial(IAX2/iax.gabcast.com/422,120,tr)
exten => s,1,Dial(IAX2/iax.gabcast.com/422,120,tr)

; end of [gabcast]


[{CODE}-app-recordings]
include => {CODE}-app-recordings-custom
exten => *77,1,Macro({CODE}-user-callerid,)
exten => *77,n,Wait(2)
exten => *77,n,Macro({CODE}-systemrecording,dorecord)
exten => *99,1,Macro({CODE}-user-callerid,)
exten => *99,n,Wait(2)
exten => *99,n,Macro({CODE}-systemrecording,docheck)

; end of [{CODE}-app-recordings]


[{CODE}-app-blacklist-check]
include => app-blacklist-check-custom
exten => s,1(check),GotoIf($["${BLACKLIST()}"="1"]?blacklisted)
exten => s,n,Set(CALLED_BLACKLIST=1)
exten => s,n,Return()
exten => s,n(blacklisted),Answer
exten => s,n,Wait(1)
exten => s,n,Zapateller()
exten => s,n,Playback(ss-noservice)
exten => s,n,Hangup

; end of [{CODE}-app-blacklist-check]


[{CODE}-app-blacklist]
include => app-blacklist-custom
exten => *30,1,Goto({CODE}-app-blacklist-add,s,1)
exten => *32,1,Goto({CODE}-app-blacklist-last,s,1)
exten => *31,1,Goto({CODE}-app-blacklist-remove,s,1)

; end of [{CODE}-app-blacklist]


[{CODE}-app-blacklist-add]
include => {CODE}-app-blacklist-add-custom
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Set(NumLoops=0)
exten => s,n(start),Playback(enter-num-blacklist)
exten => s,n,Set(TIMEOUT(digit)=5)
exten => s,n,Set(TIMEOUT(response)=60)
exten => s,n,Read(blacknr,then-press-pound,,,,)
exten => s,n,SayDigits(${blacknr})
exten => s,n,Playback(if-correct-press&digits/1)
exten => s,n,Noop(Waiting for input)
exten => s,n(end),WaitExten(60,)
exten => s,n,Playback(sorry-youre-having-problems&goodbye)
exten => 1,1,GotoIf($[ "${blacknr}" != ""]?:{CODE}-app-blacklist-add-invalid,s,1)
exten => 1,n,Set(DB(blacklist/{CODE}/${blacknr})=1)
exten => 1,n,Playback(num-was-successfully&added)
exten => 1,n,Wait(1)
exten => 1,n,Hangup

; end of [{CODE}-app-blacklist-add]


[{CODE}-app-blacklist-add-invalid]
include => {CODE}-app-blacklist-add-invalid-custom
exten => s,1,Set(NumLoops=$[${NumLoops} + 1])
exten => s,n,Playback(pm-invalid-option)
exten => s,n,GotoIf($[${NumLoops} < 3]?{CODE}-app-blacklist-add,s,start)
exten => s,n,Playback(goodbye)
exten => s,n,Hangup

; end of [{CODE}-app-blacklist-add-invalid]


[{CODE}-app-blacklist-last]
include => {CODE}-app-blacklist-last-custom
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Set(lastcaller=${DB(CALLTRACE/{CODE}/${CALLERID(number)})})
exten => s,n,GotoIf($[ $[ "${lastcaller}" = "" ] | $[ "${lastcaller}" = "unknown" ] ]?noinfo)
exten => s,n,Playback(privacy-to-blacklist-last-caller&telephone-number)
exten => s,n,SayDigits(${lastcaller})
exten => s,n,Set(TIMEOUT(digit)=3)
exten => s,n,Set(TIMEOUT(response)=7)
exten => s,n,Playback(if-correct-press&digits/1)
exten => s,n,Goto(end)
exten => s,n(noinfo),Playback(unidentified-no-callback)
exten => s,n,Hangup
exten => s,n,Noop(Waiting for input)
exten => s,n(end),WaitExten(60,)
exten => s,n,Playback(sorry-youre-having-problems&goodbye)
exten => 1,1,Set(DB(blacklist/{CODE}/${lastcaller})=1)
exten => 1,n,Playback(num-was-successfully)
exten => 1,n,Playback(added)
exten => 1,n,Wait(1)
exten => 1,n,Hangup

; end of [{CODE}-app-blacklist-last]


[{CODE}-app-blacklist-remove]
include => {CODE}-app-blacklist-remove-custom
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Playback(entr-num-rmv-blklist)
exten => s,n,Set(TIMEOUT(digit)=5)
exten => s,n,Set(TIMEOUT(response)=60)
exten => s,n,Read(blacknr,then-press-pound,,,,)
exten => s,n,SayDigits(${blacknr})
exten => s,n,Playback(if-correct-press&digits/1)
exten => s,n,Noop(Waiting for input)
exten => s,n(end),WaitExten(60,)
exten => s,n,Playback(sorry-youre-having-problems&goodbye)
exten => 1,1,Noop(Deleting: blacklist/{CODE}/${blacknr} ${DB_DELETE(blacklist/{CODE}/${blacknr})})
exten => 1,n,Playback(num-was-successfully&removed)
exten => 1,n,Wait(1)
exten => 1,n,Hangup

; end of [{CODE}-app-blacklist-remove]


; todo esto es para el feature code queues toogle
[{CODE}-app-queue-toggle]
include => {CODE}-app-queue-toggle-custom
exten => s,1(start),Answer
exten => s,n,Wait(1)
exten => s,n,Macro({CODE}-user-callerid,)
exten => s,n,Set(QUEUESTAT=LOGGEDOUT)
exten => s,n,AGI(queue_devstate.agi,getqueues,${EXTUSER})
exten => s,n,GotoIf($["${QUEUESTAT}" = "LOGGEDOUT"]?activate)
exten => s,n,GotoIf($["${QUEUESTAT}" = "LOGGEDIN"]?deactivate)
exten => s,n,GotoIf($["${QUEUESTAT}" = "STATIC"]?static:end)
exten => s,n(deactivate),Noop(Agent Logged out)
exten => s,n,Macro({CODE}-toggle-del-agent,)
exten => s,n,Playback(agent-loggedoff)
exten => s,n,Macro({CODE}-hangupcall,)
exten => s,n(activate),Noop(Agent Logged In)
exten => s,n,Macro({CODE}-toggle-add-agent,)
exten => s,n,Playback(agent-loginok)
exten => s,n,SayDigits(${CALLBACKNUM})
exten => s,n,Macro({CODE}-hangupcall,)
exten => s,n(static),Noop(User is a Static Agent)
exten => s,n,Playback(agent-loginok)
exten => s,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-queue-toggle]


[macro-{CODE}-toggle-del-agent]
include => macro-{CODE}-toggle-del-agent-custom
exten => s,1,Wait(1)
exten => s,n,Macro({CODE}-user-callerid,SKIPTTL,)
exten => s,n,Set(CALLBACKNUM=${EXTUSER})
exten => s,n,RemoveQueueMember({CODE}_${QUEUENO},Local/${CALLBACKNUM}@{CODE}-from-queue/n)
exten => s,n,RemoveQueueMember({CODE}_${QUEUENO},Local/${CALLBACKNUM}@{CODE}-from-internal/n)
exten => s,n,UserEvent(RefreshQueue)
exten => s,n,MacroExit()

; end of [macro-{CODE}-toggle-del-agent]


[macro-{CODE}-toggle-add-agent]
include => macro-{CODE}-toggle-add-agent-custom
exten => s,1,Wait(1)
exten => s,n,Macro({CODE}-user-callerid,SKIPTTL,)
exten => s,n,Set(CALLBACKNUM=${EXTUSER})
exten => s,n,GotoIf($["${DB(QPENALTY/{CODE}/${QUEUENO}/dynmemberonly)}" = "yes" & ${DB_EXISTS(QPENALTY/{CODE}/${QUEUENO}/agents/${CALLBACKNUM})} != 1]?invalid)
exten => s,n,AddQueueMember({CODE}_${QUEUENO},Local/${CALLBACKNUM}@{CODE}-from-queue/n,${DB(QPENALTY/{CODE}/${QUEUENO}/agents/${CALLBACKNUM})},,${DB(EXTUSER/{CODE}/${CALLBACKNUM}/cidname)},${DB(DEVICE/{CODE}/${REALCALLERIDNUM}/dial)})
exten => s,n,UserEvent(AgentLogin,Agent: ${CALLBACKNUM})
exten => s,n,MacroExit()
exten => s,n(invalid),Playback(pbx-invalid)
exten => s,n,MacroExit()

; end of [macro-{CODE}-toggle-add-agent]

; hasta aqui  para el feature code queues toogle



[{CODE}-app-speeddial]
include => {CODE}-app-speeddial-custom
exten => _*0.,1,Macro({CODE}-user-callerid,)
exten => _*0.,n,Set(SPEEDDIALLOCATION=${EXTEN:2})
exten => _*0.,n(lookup),Macro({CODE}-speeddial-lookup,${SPEEDDIALLOCATION},${EXTUSER})
exten => _*0.,n,GotoIf($["${SPEEDDIALNUMBER}"=""]?failed)
exten => _*0.,n,Goto({CODE}-from-internal,${SPEEDDIALNUMBER},1)
exten => _*0.,lookup+101(failed),Playback(speed-dial-empty)
exten => _*0.,n,Congestion()
exten => *75,1,Goto({CODE}-app-speeddial-set,s,1)

; end of [{CODE}-app-speeddial]


[{CODE}-app-speeddial-set]
include => {CODE}-app-speeddial-set-custom
exten => s,1,Macro({CODE}-user-callerid,)
exten => s,n(setloc),Read(newlocation,speed-enterlocation,,,,)
exten => s,n(lookup),Macro({CODE}-speeddial-lookup,${newlocation},${EXTUSER})
exten => s,n(lookup),GotoIf($["${SPEEDDIALNUMBER}"!=""]?conflicts)
exten => s,n(setnum),Read(newnum,speed-enternumber,,,,)
exten => s,n(success),Set(DB(EXTUSER/{CODE}/${EXTUSER}/speeddials/${newlocation})=${newnum})
exten => s,n,Playback(speed-dial)
exten => s,n,SayDigits(${newlocation})
exten => s,n,Playback(is-set-to)
exten => s,n,SayDigits(${newnum})
exten => s,n,Hangup
exten => s,n(conflicts),Playback(speed-dial)
exten => s,n,SayDigits(${newlocation})
exten => s,n,Playback(is-in-use)
exten => s,n,Background(press-1&to-listen-to-it&press-2&to-enter-a-diff&location&press-3&to-change&telephone-number)
exten => s,n,WaitExten(60,)
exten => 1,1,Playback(speed-dial)
exten => 1,n,SayDigits(${newlocation})
exten => 1,n,Playback(is-set-to)
exten => 1,n,SayDigits(${SPEEDDIALNUMBER})
exten => 1,n,Goto(s,conflicts)
exten => 2,1,Goto(s,setloc)
exten => 3,1,Goto(s,setnum)
exten => t,1,Congestion()

; end of [{CODE}-app-speeddial-set]


[{CODE}-cidlookup]
include => {CODE}-cidlookup-custom
exten => cidlookup_return,1,ExecIf($["${DB(cidname/{CODE}/${CALLERID(num)})}" != ""]?Set(CALLERID(name)=${DB(cidname/{CODE}/${CALLERID(num)})}))
exten => cidlookup_return,n,Return()

; end of [{CODE}-cidlookup]


[{CODE}-app-dialvm]
include => {CODE}-app-dialvm-custom
exten => *98,1,Answer
exten => *98,n(start),Wait(1)
exten => *98,n,Noop({CODE}app-dialvm: Asking for mailbox)
exten => *98,n,Read(MAILBOX,vm-login,,,3,2)
exten => *98,n(check),Noop(app-dialvm: Got Mailbox ${MAILBOX})
exten => *98,n,Macro({CODE}-get-vmcontext,${MAILBOX})
exten => *98,n,Set(VMBOXEXISTSSTATUS=${IF(${MAILBOX_EXISTS(${MAILBOX}@${VMCONTEXT})}?SUCCESS:FAILED)})
exten => *98,n,GotoIf($["${VMBOXEXISTSSTATUS}" = "SUCCESS"]?good:bad)
exten => *98,n,Macro({CODE}-hangupcall,)
exten => *98,n(good),Noop(app-dialvm: Good mailbox ${MAILBOX}@${VMCONTEXT})
exten => *98,n,VoiceMailMain(${MAILBOX}@${VMCONTEXT})
exten => *98,n,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?playret)
exten => *98,n,Macro({CODE}-hangupcall,)
exten => *98,n(bad),Noop({CODE}-app-dialvm: BAD mailbox ${MAILBOX}@${VMCONTEXT})
exten => *98,n,Wait(1)
exten => *98,n,Noop({CODE}-app-dialvm: Asking for password so people can't probe for existence of a mailbox)
exten => *98,n,Read(FAKEPW,vm-password,,,3,2)
exten => *98,n,Noop({CODE}-app-dialvm: Asking for mailbox again)
exten => *98,n,Read(MAILBOX,vm-incorrect-mailbox,,,3,2)
exten => *98,n,Goto(check)
exten => *98,n,Macro({CODE}-hangupcall,)
exten => *98,n(playret),Playback(beep&you-will-be-transfered-menu&silence/1)
exten => *98,n,Goto(${IVR_CONTEXT},return,1)
exten => _*98.,1,Answer
exten => _*98.,n,Wait(1)
exten => _*98.,n,Macro({CODE}-get-vmcontext,${EXTEN:3})
exten => _*98.,n,VoiceMailMain(${EXTEN:3}@${VMCONTEXT})
exten => _*98.,n,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?${IVR_CONTEXT},return,1)
exten => _*98.,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-dialvm]


[{CODE}-app-vmmain]
include => {CODE}-app-vmmain-custom
exten => *97,1,Answer
exten => *97,n,Wait(1)
exten => *97,n,Macro({CODE}-user-callerid,)
exten => *97,n,Macro({CODE}-get-vmcontext,${EXTUSER})
exten => *97,n(check),Set(VMBOXEXISTSSTATUS=${IF(${MAILBOX_EXISTS(${EXTUSER}@${VMCONTEXT})}?SUCCESS:FAILED)})
exten => *97,n,GotoIf($["${VMBOXEXISTSSTATUS}" = "SUCCESS"]?mbexist)
exten => *97,n,VoiceMailMain()
exten => *97,n,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?playret)
exten => *97,n,Macro({CODE}-hangupcall,)
exten => *97,check+101(mbexist),VoiceMailMain(${EXTUSER}@${VMCONTEXT})
exten => *97,n,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?playret)
exten => *97,n,Macro({CODE}-hangupcall,)
exten => *97,n(playret),Playback(beep&you-will-be-transfered-menu&silence/1)
exten => *97,n,Goto(${IVR_CONTEXT},return,1)

; end of [{CODE}-app-vmmain]


[{CODE}-app-pbdirectory]
include => app-pbdirectory-custom
exten => 411,1,Goto(pbdirectory,1)
exten => pbdirectory,1,Answer
exten => pbdirectory,n,Wait(1)
exten => pbdirectory,n,Macro({CODE}-user-callerid,)
exten => pbdirectory,n,AGI(pbdirectory,{CODE})
exten => pbdirectory,n,GotoIf($["${dialnumber}"=""]?hangup,1)
exten => pbdirectory,n,Noop(Got number to dial: ${dialnumber})
exten => pbdirectory,n,Dial(Local/${dialnumber}@{CODE}-from-internal/n,)
exten => hangup,1,Hangup

; end of [{CODE}-app-pbdirectory]


[{CODE}-app-dnd-off]
include => {CODE}-app-dnd-off-custom
exten => *79,1,Answer
exten => *79,n,Wait(1)
exten => *79,n,Macro({CODE}-user-callerid,)
exten => *79,n,Noop(Deleting: DND/${EXTUSER} ${DB_DELETE(DND/{CODE}/${EXTUSER})})
exten => *79,n(hook_1),Playback(do-not-disturb&de-activated)
exten => *79,n,Macro(hangupcall,)

; end of [{CODE}-app-dnd-off]


[{CODE}-app-dnd-on]
include => {CODE}-app-dnd-on-custom
exten => *78,1,Answer
exten => *78,n,Wait(1)
exten => *78,n,Macro({CODE}-user-callerid,)
exten => *78,n,Set(DB(DND/{CODE}/${EXTUSER})=YES)
exten => *78,n(hook_1),Playback(do-not-disturb&activated)
exten => *78,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-dnd-on]


[{CODE}-app-dnd-toggle]
include => {CODE}-app-dnd-toggle-custom
exten => *76,1,Answer
exten => *76,n,Wait(1)
exten => *76,n,Macro({CODE}-user-callerid,)
exten => *76,n,GotoIf($["${DB(DND/{CODE}/${EXTUSER})}" = ""]?activate:deactivate)
exten => *76,n(activate),Set(DB(DND/{CODE}/${EXTUSER})=YES)
exten => *76,n(hook_on),Playback(do-not-disturb&activated)
exten => *76,n,Macro({CODE}-hangupcall,)
exten => *76,n(deactivate),Noop(Deleting: DND/{CODE}/${EXTUSER} ${DB_DELETE(DND/{CODE}/${EXTUSER})})
exten => *76,n(hook_off),Playback(do-not-disturb&de-activated)
exten => *76,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-dnd-toggle]


[{CODE}-app-callwaiting-cwoff]
include => {CODE}-app-callwaiting-cwoff-custom
exten => *71,1,Answer
exten => *71,n,Wait(1)
exten => *71,n,Macro({CODE}-user-callerid,)
exten => *71,n,Noop(Deleting: CW/{CODE}/${EXTUSER} ${DB_DELETE(CW/{CODE}/${EXTUSER})})
exten => *71,n(hook_1),Playback(call-waiting&de-activated)
exten => *71,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-callwaiting-cwoff]


[{CODE}-app-callwaiting-cwon]
include => {CODE}-app-callwaiting-cwon-custom
exten => *70,1,Answer
exten => *70,n,Wait(1)
exten => *70,n,Macro({CODE}-user-callerid,)
exten => *70,n,Set(DB(CW/{CODE}/${EXTUSER})=ENABLED)
exten => *70,n(hook_1),Playback(call-waiting&activated)
exten => *70,n,Macro(hangupcall,)

; end of [{CODE}-app-callwaiting-cwon]


[{CODE}-app-cf-busy-off]
include => {CODE}-app-cf-busy-off-custom
exten => *91,1,Answer
exten => *91,n,Wait(1)
exten => *91,n,Macro({CODE}-user-callerid,)
exten => *91,n,Set(fromext=${EXTUSER})
exten => *91,n,Noop(Deleting: CFB/{CODE}/${fromext} ${DB_DELETE(CFB/{CODE}/${fromext})})
exten => *91,n(hook_1),Playback(call-fwd-on-busy&de-activated)
exten => *91,n,Macro({CODE}-hangupcall,)
exten => _*91.,1,Answer
exten => _*91.,n,Wait(1)
exten => _*91.,n,Set(fromext=${EXTEN:3})
exten => _*91.,n,Noop(Deleting: CFB/{CODE}/${fromext} ${DB_DELETE(CFB/{CODE}/${fromext})})
exten => _*91.,n(hook_2),Playback(call-fwd-on-busy&for&extension)
exten => _*91.,n,SayDigits(${fromext})
exten => _*91.,n,Playback(cancelled)
exten => _*91.,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-cf-busy-off]


[{CODE}-app-cf-busy-off-any]
include => {CODE}-app-cf-busy-off-any-custom
exten => *92,1,Answer
exten => *92,n,Macro({CODE}-user-callerid,)
exten => *92,n,Wait(1)
exten => *92,n,Read(fromext,please-enter-your&extension&then-press-pound,,,,)
exten => *92,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${EXTUSER}:${fromext})})
exten => *92,n,Wait(1)
exten => *92,n,Noop(Deleting: CFB/{CODE}/${fromext} ${DB_DELETE(CFB/{CODE}/${fromext})})
exten => *92,n(hook_1),Playback(call-fwd-on-busy&for&extension)
exten => *92,n,SayDigits(${fromext})
exten => *92,n,Playback(cancelled)
exten => *92,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-cf-busy-off-any]


[{CODE}-app-cf-busy-on]
include => {CODE}-app-cf-busy-on-custom
exten => *90,1,Answer
exten => *90,n,Wait(1)
exten => *90,n,Macro({CODE}-user-callerid,)
exten => *90,n,Read(fromext,call-fwd-on-busy&please-enter-your&extension&then-press-pound,,,,)
exten => *90,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${EXTUSER}:${fromext})})
exten => *90,n,Wait(1)
exten => *90,n(startread),Read(toext,ent-target-attendant&then-press-pound,,,,)
exten => *90,n,GotoIf($["foo${toext}"="foo"]?startread)
exten => *90,n,Wait(1)
exten => *90,n,Set(DB(CFB/{CODE}/${fromext})=${toext})
exten => *90,n(hook_1),Playback(call-fwd-on-busy&for&extension)
exten => *90,n,SayDigits(${fromext})
exten => *90,n,Playback(is-set-to)
exten => *90,n,SayDigits(${toext})
exten => *90,n,Macro({CODE}-hangupcall,)
exten => _*90.,1,Answer
exten => _*90.,n,Wait(1)
exten => _*90.,n,Macro({CODE}-user-callerid,)
exten => _*90.,n,Set(fromext=${EXTUSER})
exten => _*90.,n,Set(toext=${EXTEN:3})
exten => _*90.,n,Set(DB(CFB/{CODE}/${fromext})=${toext})
exten => _*90.,n(hook_2),Playback(call-fwd-on-busy&for&extension)
exten => _*90.,n,SayDigits(${fromext})
exten => _*90.,n,Playback(is-set-to)
exten => _*90.,n,SayDigits(${toext})
exten => _*90.,n,Macro({CODE}-hangupcall,)

; end of [app-cf-busy-on]


[{CODE}-app-cf-off]
include => {CODE}-app-cf-off-custom
exten => *73,1,Answer
exten => *73,n,Wait(1)
exten => *73,n,Macro({CODE}-user-callerid,)
exten => *73,n,Set(fromext=${EXTUSER})
exten => *73,n,Noop(Deleting: CF/{CODE}/${fromext} ${DB_DELETE(CF/{CODE}/${fromext})})
exten => *73,n(hook_1),Playback(call-fwd-unconditional&de-activated)
exten => *73,n,Macro({CODE}-hangupcall,)
exten => _*73.,1,Answer
exten => _*73.,n,Wait(1)
exten => _*73.,n,Set(fromext=${EXTEN:3})
exten => _*73.,n,Noop(Deleting: CF/{CODE}/${fromext} ${DB_DELETE(CF/{CODE}/${fromext})})
exten => _*73.,n(hook_2),Playback(call-fwd-unconditional&for&extension)
exten => _*73.,n,SayDigits(${fromext})
exten => _*73.,n,Playback(cancelled)
exten => _*73.,n,Macro(hangupcall,)

; end of [{CODE}-app-cf-off]


[{CODE}-app-cf-off-any]
include => app-cf-off-any-custom
exten => *74,1,Answer
exten => *74,n,Macro({CODE}-user-callerid,)
exten => *74,n,Wait(1)
exten => *74,n,Read(fromext,please-enter-your&extension&then-press-pound,,,,)
exten => *74,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${EXTUSER}:${fromext})})
exten => *74,n,Wait(1)
exten => *74,n,Noop(Deleting: CF/{CODE}/${fromext} ${DB_DELETE(CF/{CODE}/${fromext})})
exten => *74,n(hook_1),Playback(call-fwd-unconditional&for&extension)
exten => *74,n,SayDigits(${fromext})
exten => *74,n,Playback(cancelled)
exten => *74,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-cf-off-any]


[{CODE}-app-cf-on]
include => app-cf-on-custom
exten => *72,1,Answer
exten => *72,n,Wait(1)
exten => *72,n,Macro({CODE}-user-callerid,)
exten => *72,n,Read(fromext,call-fwd-unconditional&please-enter-your&extension&then-press-pound,,,,)
exten => *72,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${EXTUSER}:${fromext})})
exten => *72,n,Wait(1)
exten => *72,n(startread),Read(toext,ent-target-attendant&then-press-pound,,,,)
exten => *72,n,GotoIf($["foo${toext}"="foo"]?startread)
exten => *72,n,Wait(1)
exten => *72,n,Set(DB(CF/{CODE}/${fromext})=${toext})
exten => *72,n(hook_1),Playback(call-fwd-unconditional&for&extension)
exten => *72,n,SayDigits(${fromext})
exten => *72,n,Playback(is-set-to)
exten => *72,n,SayDigits(${toext})
exten => *72,n,Macro({CODE}-hangupcall,)
exten => _*72.,1,Answer
exten => _*72.,n,Wait(1)
exten => _*72.,n,Macro({CODE}-user-callerid,)
exten => _*72.,n,Set(fromext=${EXTUSER})
exten => _*72.,n,Set(toext=${EXTEN:3})
exten => _*72.,n,Set(DB(CF/{CODE}/${fromext})=${toext})
exten => _*72.,n(hook_2),Playback(call-fwd-unconditional&for&extension)
exten => _*72.,n,SayDigits(${fromext})
exten => _*72.,n,Playback(is-set-to)
exten => _*72.,n,SayDigits(${toext})
exten => _*72.,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-cf-on]


[{CODE}-app-cf-unavailable-off]
include => {CODE}-app-cf-unavailable-off-custom
exten => *53,1,Answer
exten => *53,n,Wait(1)
exten => *53,n,Macro({CODE}-user-callerid,)
exten => *53,n,Set(fromext=${EXTUSER})
exten => *53,n,Noop(Deleting: CFU/{CODE}/${fromext} ${DB_DELETE(CFU/{CODE}/${fromext})})
exten => *53,n(hook_1),Playback(call-fwd-no-ans&de-activated)
exten => *53,n,Macro({CODE}-hangupcall,)
exten => _*53.,1,Answer
exten => _*53.,n,Wait(1)
exten => _*53.,n,Set(fromext=${EXTEN:3})
exten => _*53.,n,Noop(Deleting: CFU/{CODE}/${fromext} ${DB_DELETE(CFU/{CODE}/${fromext})})
exten => _*53.,n(hook_2),Playback(call-fwd-no-ans&for&extension)
exten => _*53.,n,SayDigits(${fromext})
exten => _*53.,n,Playback(cancelled)
exten => _*53.,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-cf-unavailable-off]


[{CODE}-app-cf-unavailable-on]
include => {CODE}-app-cf-unavailable-on-custom
exten => *52,1,Answer
exten => *52,n,Wait(1)
exten => *52,n,Macro({CODE}-user-callerid,)
exten => *52,n,Read(fromext,call-fwd-no-ans&please-enter-your&extension&then-press-pound,,,,)
exten => *52,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${EXTUSER}:${fromext})})
exten => *52,n,Wait(1)
exten => *52,n(startread),Read(toext,ent-target-attendant&then-press-pound,,,,)
exten => *52,n,GotoIf($["foo${toext}"="foo"]?startread)
exten => *52,n,Wait(1)
exten => *52,n,Set(DB(CFU/{CODE}/${fromext})=${toext})
exten => *52,n(hook_1),Playback(call-fwd-no-ans&for&extension)
exten => *52,n,SayDigits(${fromext})
exten => *52,n,Playback(is-set-to)
exten => *52,n,SayDigits(${toext})
exten => *52,n,Macro({CODE}-hangupcall,)
exten => _*52.,1,Answer
exten => _*52.,n,Wait(1)
exten => _*52.,n,Macro({CODE}-user-callerid,)
exten => _*52.,n,Set(fromext=${EXTUSER})
exten => _*52.,n,Set(toext=${EXTEN:3})
exten => _*52.,n,Set(DB(CFU/{CODE}/${fromext})=${toext})
exten => _*52.,n(hook_2),Playback(call-fwd-no-ans&for&extension)
exten => _*52.,n,SayDigits(${fromext})
exten => _*52.,n,Playback(is-set-to)
exten => _*52.,n,SayDigits(${toext})
exten => _*52.,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-cf-unavailable-on]


[{CODE}-app-cf-toggle]
include => {CODE}-app-cf-toggle-custom
exten => *740,1,Answer
exten => *740,n,Wait(1)
exten => *740,n,Macro({CODE}-user-callerid,)
exten => *740,n,Set(fromext=${EXTUSER})
exten => *740,n,GotoIf($["${DB(CF/{CODE}/${fromext})}" = ""]?activate:deactivate)
exten => *740,n(activate),Read(toext,ent-target-attendant&then-press-pound,,,,)
exten => *740,n,GotoIf($["${toext}"=""]?activate)
exten => *740,n,Wait(1)
exten => *740,n(toext),Set(DB(CF/{CODE}/${fromext})=${toext})
exten => *740,n(hook_on),Playback(call-fwd-unconditional&for&extension)
exten => *740,n,SayDigits(${fromext})
exten => *740,n,Playback(is-set-to)
exten => *740,n,SayDigits(${toext})
exten => *740,n,Macro({CODE}-hangupcall,)
exten => *740,n(setdirect),Answer
exten => *740,n,Wait(1)
exten => *740,n,Macro({CODE}-user-callerid,)
exten => *740,n,Goto(toext)
exten => *740,n(deactivate),Noop(Deleting: CF/{CODE}/${fromext} ${DB_DELETE(CF/{CODE}/${fromext})})
exten => *740,n(hook_off),Playback(call-fwd-unconditional&de-activated)
exten => *740,n,Macro({CODE}-hangupcall,)

; end of [{CODE}-app-cf-toggle]


[{CODE}-app-userlogonoff]
include => {CODE}-app-userlogonoff-custom
exten => *12,1,Macro({CODE}-user-logoff,)
exten => *12,n(hook_off),Hangup
exten => *11,1,Macro({CODE}-user-logon,)
exten => *11,n(hook_on_1),Hangup
exten => _*11.,1,Macro({CODE}-user-logon,${EXTEN:3},)
exten => _*11.,n(hook_on_2),Hangup

; end of [{CODE}-app-userlogonoff]


;PENDIENTE
[{CODE}-app-zapbarge]
include => {CODE}-app-zapbarge-custom
exten => 888,1,Macro({CODE}-user-callerid,)
exten => 888,n,Set(GROUP()=${CALLERID(number)})
exten => 888,n,Answer
exten => 888,n,Wait(1)
exten => 888,n,DAHDIBarge()
exten => 888,n,Hangup

; end of [{CODE}-app-zapbarge]


[{CODE}-app-chanspy]
include => {CODE}-app-chanspy-custom
exten => 555,1,Macro({CODE}-user-callerid,)
exten => 555,n,Answer
exten => 555,n,Wait(1)
exten => 555,n,ChanSpy()
exten => 555,n,Hangup

; end of [{CODE}-app-chanspy]


[{CODE}-ext-test]
include => ext-test-custom
exten => 7777,1,Goto({CODE}-from-pstn,${EXTEN},1)
exten => h,1,Macro({CODE}-hangupcall,)
; end of [{CODE}-ext-test]

